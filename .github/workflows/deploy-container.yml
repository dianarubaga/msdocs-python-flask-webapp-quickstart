name: deploy-containerized-app

on:
  workflow_dispatch:
  push:
    branches:
      - '*'

env:
  RESOURCE_GROUP_DEV: BCSAI2024-DEVOPS-STUDENTS-B-DEV
  SUBSCRIPTION_ID_DEV: 0b9cada-61bc-4b5a-bd7a-52c606726b3b
  REGISTRY_LOGIN_SERVER: dianacont.azurecr.io # Replace with your ACR login server
  IMAGE_BASE_NAME: dianaimage # Replace with your Docker image name
  WEBAPP_NAME: dianarubaga # Replace with your Web App name
  KEY_VAULT_NAME: dianakeyvault # Replace with your Key Vault name

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - uses: actions/checkout@v2

      # Step 2: Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Retrieve Key Vault Secrets
      - name: Retrieve Key Vault Secrets
        id: keyvault-secrets
        run: |
          export ADMIN_USERNAME=$(az keyvault secret show --vault-name ${{ env.KEY_VAULT_NAME }} --name adminUsernameSecretName --query value -o tsv)
          export ADMIN_PASSWORD=$(az keyvault secret show --vault-name ${{ env.KEY_VAULT_NAME }} --name adminPasswordSecretName --query value -o tsv)
          echo "ADMIN_USERNAME=$ADMIN_USERNAME" >> $GITHUB_ENV
          echo "ADMIN_PASSWORD=$ADMIN_PASSWORD" >> $GITHUB_ENV

      # Step 4: Login to Azure Container Registry
      - name: Login to ACR
        run: |
          echo "${{ env.ADMIN_PASSWORD }}" | docker login ${{ env.REGISTRY_LOGIN_SERVER }} -u "${{ env.ADMIN_USERNAME }}" --password-stdin

      # Step 5: Set Image Version
      - name: Set Image Version
        id: image-version
        run: echo "version=$(echo ${GITHUB_REF#refs/heads/})-$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_ENV

      # Step 6: Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ env.version }}
          docker tag ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ env.version }} ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:latest
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ env.version }}
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment:
      name: 'Development'

    steps:
      # Step 1: Checkout code
      - uses: actions/checkout@v2

      # Step 2: Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Deploy Docker Image to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          images: ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:latest
