name: Deploy Container App to Azure

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  REGISTRY_LOGIN_SERVER: dianacr.azurecr.io # Replace with your ACR name
  IMAGE_BASE_NAME: flask-demo # Replace with your Docker image name
  WEBAPP_NAME: dianawebapp # Replace with your Azure Web App name
  RESOURCE_GROUP: BCSAI2024-DEVOPS-STUDENTS-B-DEV # Replace with your resource group
  SUBSCRIPTION_ID: e0b9cada-61bc-4b5a-bd7a-52c606726b3b

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Log in to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Log in to Azure Container Registry (ACR)
      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Step 4: Set image version
      - name: Set image version
        id: image-version
        run: echo "::set-output name=version::$(date +'%Y.%m.%d.%H.%M')"

      # Step 5: Build and push Docker image
      - name: Build and push image
        run: |
          docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      # Step 6: Log in to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 7: Deploy Docker image to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          slot-name: production
          images: ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ needs.build-and-publish.outputs['image-version'] }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
